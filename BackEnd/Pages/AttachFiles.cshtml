@page
@model BackEnd.Pages.AttachFilesModel
@{
    var tasksJson = System.Text.Json.JsonSerializer.Serialize(TaskStore.Tasks);
}
<style>
    #filesContainer {
        display: flex;
        flex-direction: column;
        gap: 2px;
        max-height: 500px;
        overflow-y: auto;
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #fff;
    }

    .file-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        border: 1px solid #ccc;
        background-color: #f9f9f9;
        transition: background-color 0.3s;
    }

        .file-item:hover {
            background-color: #f1f1f1;
        }

    .file-name {
        font-size: 16px;
        color: #333;
    }
    .popup {
        position: absolute;
        background-color: #fff;
        border: 1px solid rgba(0, 0, 0, 0.15);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        z-index: 1000;
        padding:10px;
        border-radius: 4px;
    }

        .popup button {
            display: block;
            width: 100%;
            text-align: center;
            padding: 0.5rem 1rem;
            border: none;
            background-color: #007bff;
        }

            .popup button:hover {
                background-color: #0056b3;
            }

    .btn {
        color: #fff;
        background-color: #007bff;
        border-color: #007bff;
    }

        .btn:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

    .custom-table {
        width: 100%;
        border-collapse: collapse;
        border: 1px solid #ccc; /* Серый контур таблицы */
        border-radius: 5px; /* Закругленные углы */
    }

        /* Стили для заголовков */
        .custom-table th {
            background-color: #f2f2f2; /* Фон заголовков */
            padding: 10px;
            text-align: center;
            border: 1px solid #ccc; /* Серый контур заголовков */
        }

        /* Стили для ячеек */
        .custom-table td {
            padding: 10px;
            text-align:left;
            border: 1px solid #ccc; /* Серый контур ячеек */

        }

        /* Стили для строки при наведении */
        .custom-table tbody tr:hover {
            background-color: #f9f9f9; /* Фон строки при наведении */
        }

        /* Стили для действий */
        .custom-table .action-column {
            width: 100px;
        }

    .modal-header {
        background-color: #007bff;
        color: #fff;
        border-bottom: none;
    }

    .modal-content {
        border: 1px solid rgba(0, 123, 255, 0.2);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }

    .modal-footer {
        border-top: none;
    }

    .modal-title {
        color: #ffffff;
    }

    .attachments {
        background-color: #f8f9fa; /* Светло-серый фон */
        border: 1px solid #dee2e6; /* Серый контур */
        border-radius: 5px; /* Закругленные углы */
        padding: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Легкая тень */
    }

        .attachments h4 {
            border-bottom: 2px solid #007bff; /* Синяя линия под заголовком */
            padding-bottom: 10px;
            margin-bottom: 15px;
            color: #343a40; /* Темный цвет текста */
        }

    .list-group-item {
        border: 1px solid #dee2e6; /* Серый контур элемента списка */
        margin-bottom: 10px;
        border-radius: 5px; /* Закругленные углы элемента списка */
        transition: background-color 0.3s, color 0.3s; /* Плавный переход цвета фона и текста */
        text-align:left;
        margin-right: 20px;
    }

        .list-group-item:last-child {
            margin-bottom: 0; /* Удаление отступа последнего элемента списка */
        }

        .list-group-item:hover {
            background-color: #007bff; /* Синий фон при наведении */
            color: #fff; /* Белый цвет текста при наведении */
        }

    .btn-container {
        display: flex;
        gap: 5px;
    }

    body {
        margin-top: 20px; /* Задайте нужный вам отступ сверху */
    }
</style>
<div class="row">
    <div class="col-md-8">
        <table class="custom-table">
            <thead>
                <tr>
                    <th>Task</th>
                    <th>Description</th>
                    <th>Priority</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in TaskStore.Tasks)
                {
                    <tr data-task-id="@task.Id" onclick="selectTask(this)">
                        <td>@task.Name</td>
                        <td>@task.Description</td>
                        <td>@task.Priority</td>
                        <td>
                            <button class="btn btn-primary" onclick="showPopup(this, @task.Id, '@task.Name')">...</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-md-4">
        <div class="attachments">
            <h4>Attachments List</h4>
            <ul class="list-group text-center" id="attachmentsList">
            </ul>
        </div>
    </div>
</div>

<div class="popup" id="popupMenu" style="display: none;">
    <button class="btn btn-primary" onclick="openCreateFileModal()">Create File</button>
    <div style="margin-top: 5px;"></div>
    <button class="btn btn-primary" onclick="loadFilesAndShowModal()">Add Existing File</button>
</div>

<div class="modal fade" id="createFileModal" tabindex="-1" role="dialog" aria-labelledby="createFileModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form method="post" asp-page-handler="CreateFile">
                <div class="modal-header">
                    <h5 class="modal-title" id="createFileModalLabel">Enter file name for task: <span id="taskName"></span></h5>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="taskIdInput" name="taskId" />
                    <input type="text" class="form-control" id="fileNameInput" name="fileName">
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Create</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="attachModal" tabindex="-1" role="dialog" aria-labelledby="createFileModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createFileModalLabel">Add existing file to task: <span id="taskNameAttach"></span></h5>
            </div>
            <div class="modal-body">
                <div id="filesContainer">
                    @foreach (var file in FilesStore.AvailableFiles)
                    {
                        <div class="file-item">
                            <span class="file-name">@file.Name</span>
                            <button class="btn btn-primary" onclick="selectFile(@file.Id, '@file.Name')">Attach</button>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<form id="attachFileToTask" method="post" asp-page-handler="AttachFileToTask">
    <input type="hidden" name="taskId" id="taskId" />
    <input type="hidden" name="fileId" id="fileId" />
    <input type="hidden" name="fileName" id="fileName" />
</form>

@section Scripts {
    <script>
        let selectedTaskId = null;

        function selectTask(row) {
            document.querySelectorAll('tbody tr.selected').forEach(e => e.classList.remove('selected'));
            row.classList.add('selected');
            selectedTaskId = row.getAttribute('data-task-id');
            updateAttachmentsList();
        }

        function showPopup(button, taskId, taskName) {
            event.stopPropagation(); // Prevent the row from being selected again
            const popup = document.getElementById("popupMenu");
            popup.style.display = "block";
            const rect = button.getBoundingClientRect();
            popup.style.top = (rect.top + button.offsetHeight) + "px";
            popup.style.left = rect.left + "px";
            popup.setAttribute('data-task-id', taskId);
            popup.setAttribute('data-task-name', taskName);
            document.addEventListener("click", function closePopup(e) {
                if (!popup.contains(e.target) && e.target !== button) {
                    popup.style.display = "none";
                    document.removeEventListener("click", closePopup);
                }
            });
        }

        function openCreateFileModal() {
            if (!selectedTaskId) {
                console.error("No task is selected.");
                return;
            }
            const selectedRow = document.querySelector("tr.selected");
            const taskName = selectedRow.querySelector("td:first-child").innerText;
            document.getElementById("taskName").innerText = taskName;
            document.getElementById("taskIdInput").value = selectedTaskId;
            $('#createFileModal').modal('show');
        }

        function loadFilesAndShowModal() {
            if (!selectedTaskId) {
                console.error("No task is selected.");
                return;
            }
            const selectedRow = document.querySelector("tr.selected");
            const taskName = selectedRow.querySelector("td:first-child").innerText;
            document.getElementById("taskNameAttach").innerText = taskName;
            document.getElementById("taskIdInput").value = selectedTaskId;
            $('#attachModal').modal('show');
        }

        function selectFile(fileId, fileName) {
            if (!selectedTaskId) {
                console.error("No task is selected.");
                return;
            }
            document.getElementById('taskId').value = selectedTaskId;
            document.getElementById('fileId').value = fileId;
            document.getElementById('fileName').value = fileName;
            document.getElementById('attachFileToTask').submit();
        }

        function updateAttachmentsList() {
            const attachmentsList = document.getElementById('attachmentsList');
            attachmentsList.innerHTML = '';

            const selectedTask = tasks.find(task => task.Id == selectedTaskId);
            if (selectedTask && selectedTask.Attachments.length > 0) {
                selectedTask.Attachments.forEach(attachment => {
                    const li = document.createElement('li');
                    li.className = 'list-group-item';
                    li.textContent = attachment.FileName;
                    li.addEventListener('click', function () {
                        window.open(attachment.WebUrl, '_blank');
                    });
                    attachmentsList.appendChild(li);
                });
            } else {
                attachmentsList.innerHTML = '<li class="list-group-item">No attachments</li>';
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('tbody tr').forEach(item => {
                item.addEventListener('click', function () {
                    selectTask(this);
                });
            });
        });
        const tasks = @Html.Raw(tasksJson);
    </script>
}